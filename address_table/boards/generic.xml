<!-- Optical links module -->
<node id="OPTICAL_LINKS"  address="0xd00000"
      description="This module contains counters and control registers of all the optical links on the board (regardless of link rate or what they connect to)"
      fw_is_module="true"
      fw_module_file="../common/hdl/mgt/mgt_slow_control.vhd"
      fw_user_clock_signal="clk_stable_i"
      fw_bus_clock_signal="ipb_clk_i"
      fw_bus_reset_signal="ipb_reset_i"
      fw_master_bus_signal="ipb_mosi_i"
      fw_slave_bus_signal="ipb_miso_o"
      fw_reg_addr_msb="15"
      fw_reg_addr_lsb="0">

  <node id="MGT_CHANNEL_${MGT}" address="0x0"
        description="MGT channel ${MGT} control and status. Note: these are MGT channles, which do not correspond 1-to-1 with the fiber numbering. Please refer to the gem_board_config_pkg.vhd for the mapping details."
        generate="true" generate_size="&NUM_OPTICAL_LINKS;" generate_address_step="0x00000040" generate_idx_var="MGT">

    <node id="RESET" address="0x0" permission="w"
          description="Writing anything to this register will trigger a TX and RX reset for this MGT"
          fw_write_pulse_signal="reset_arr(${MGT})"/>

    <node id="CTRL" address="0x1"
          description="This register exposes multiple MGT controls: bit 0 -- TX powerdown, bit 1 -- RX powerdown, bit 2 -- TX polarity, bit 3 -- RX polarity, bit 4 -- loopback, bit 5 -- TX inhibit, bit 6 -- RX low power mode enable">
      <node id="TX_POWERDOWN" address="0x0" mask="0x00000001" permission="rw"
            description="Setting this to 1 will powerdown the TX (writes 11 to TXPD), and 0 will put it in normal power mode (writes 00 to TXPD)"
            fw_signal="txpd_arr(${MGT})" fw_default="0b0"/>
      <node id="RX_POWERDOWN" address="0x0" mask="0x00000002" permission="rw"
            description="Setting this to 1 will powerdown the RX (writes 11 to RXPD), and 0 will put it in normal power mode (writes 00 to RXPD)"
            fw_signal="rxpd_arr(${MGT})" fw_default="0b0"/>
      <node id="TX_POLARITY" address="0x0" mask="0x00000004" permission="rw"
            description="Setting this to 1 will invert the polarity of TX, setting to 0 will result in normal TX polarity"
            fw_signal="tx_slow_ctrl_arr(${MGT}).txpolarity" fw_default="0b0"/>
      <node id="RX_POLARITY" address="0x0" mask="0x00000008" permission="rw"
            description="Setting this to 1 will invert the polarity of RX, setting to 0 will result in normal RX polarity"
            fw_signal="rx_slow_ctrl_arr(${MGT}).rxpolarity" fw_default="0b0"/>
      <node id="LOOPBACK" address="0x0" mask="0x00000010" permission="rw"
            description="Setting this to 1 will enable the near-end PMA loopback of the MGT (sets MGT LOOPBACK port to 010). This is an expert debug feature."
            fw_signal="loopback_arr(${MGT})" fw_default="0b0"/>
      <node id="TX_INHIBIT" address="0x0" mask="0x00000020" permission="rw"
            description="Setting this to 1 will inhibit the TX channel (forces MGTHTXP to 0 and MGTHTXN to 1). This is an expert debug feature."
            fw_signal="tx_slow_ctrl_arr(${MGT}).txinhibit" fw_default="0b0"/>
      <node id="RX_LOW_POWER_MODE" address="0x0" mask="0x00000040" permission="rw"
            description="Setting this to 1 enables the RX LPM (this controls RXLPMEN). NOTE: THIS MUST ALWAYS BE SET TO 1 FOR GOOD RX PERFORMANCE WITH 8b10b ENCODING."
            fw_signal="rx_slow_ctrl_arr(${MGT}).rxlpmen" fw_default="0b0"/>
      <node id="TX_DIFF_CTRL" address="0x1" mask="0x0000001f" permission="rw"
            description="Conrtols the differential swing amplitude, is directly wired to the TXDIFFCTRL port of the MGT, refer to the MGT manual for units."
            fw_signal="tx_slow_ctrl_arr(${MGT}).txdiffctrl" fw_default="0b11000"/>
      <node id="TX_PRE_CURSOR" address="0x1" mask="0x00001f00" permission="rw"
            description="Directly wired to the TXPRECURSOR port of the MGT, refer to the MGT manual for units."
            fw_signal="tx_slow_ctrl_arr(${MGT}).txprecursor" fw_default="0b00000"/>
      <node id="TX_POST_CURSOR" address="0x1" mask="0x001f0000" permission="rw"
            description="Directly wired to the TXPOSTCURSOR port of the MGT, refer to the MGT manual for units."
            fw_signal="tx_slow_ctrl_arr(${MGT}).txpostcursor" fw_default="0b00000"/>
      <node id="TX_MAIN_CURSOR" address="0x1" mask="0x7f000000" permission="rw"
            description="Directly wired to the TXMAINCURSOR port of the MGT, refer to the MGT manual for units."
            fw_signal="tx_slow_ctrl_arr(${MGT}).txmaincursor" fw_default="0b0000000"/>
      <node id="RX_PRBS_SEL" address="0x2" mask="0x00000007" permission="rw"
            description="Controls the RX PRBS mode: 000 -- normal operation (no PRBS checks), 001 -- PRBS7, 010 -- PRBS15, 011 -- PRBS23, 100 -- PRBS31"
            fw_signal="rx_slow_ctrl_arr(${MGT}).rxprbssel" fw_default="0b000"/>
      <node id="TX_PRBS_SEL" address="0x2" mask="0x00000070" permission="rw"
            description="Controls the TX PRBS mode: 000 -- normal operation (no PRBS), 001 -- PRBS7, 010 -- PRBS15, 011 -- PRBS23, 100 -- PRBS31, 101 -- PCIe compliance patteren, 110 -- square wave with 2 UI (alternating 0s and 1s), 111 -- square wave with 16 UI, 20 UI, 32 UI or 40 UI period depending on data width"
            fw_signal="tx_slow_ctrl_arr(${MGT}).txprbssel" fw_default="0b000"/>
      <node id="TX_PRBS_FORCE_ERR" address="0x3" permission="w"
            description="Writing anything here forces a PRBS error on the TX"
            fw_write_pulse_signal="tx_slow_ctrl_arr(${MGT}).txprbsforceerr"/>
      <node id="RX_PRBS_CNT_RESET" address="0x4" permission="w"
            description="Writing 1 here resets the PRBS error counters"
            fw_write_pulse_signal="prbs_err_reset_arr(${MGT})"/>
    </node>

    <node id="STATUS" address="0x20">
      <node id="TX_RESET_DONE" address="0x0" mask="0x00000001" permission="r"
            description="TX reset done signal"
            fw_signal="tx_reset_done_arr_i(${MGT})"/>
      <node id="RX_RESET_DONE" address="0x0" mask="0x00000002" permission="r"
            description="RX reset done signal"
            fw_signal="rx_reset_done_arr_i(${MGT})"/>
      <node id="TX_PHALIGN_DONE" address="0x0" mask="0x00000004" permission="r"
            description="TX phase alignment is done (only valid for buffer bypass MGTs)"
            fw_signal="tx_phalign_done_arr_i(${MGT})"/>
      <node id="RX_PHALIGN_DONE" address="0x0" mask="0x00000008" permission="r"
            description="RX phase alignment is done (only valid for buffer bypass MGTs)"
            fw_signal="rx_phalign_done_arr_i(${MGT})"/>
      <node id="POWER_GOOD" address="0x0" mask="0x00000010" permission="r"
            description="Power good signal from the MGT"
            fw_signal="misc_status_arr_i(${MGT}).powergood"/>
      <node id="CPLL_LOCKED" address="0x0" mask="0x00000020" permission="r"
            description="CPLL locked signal"
            fw_signal="cpll_status_arr_i(${MGT}).cplllock"/>
      <node id="CPLL_REF_CLK_LOST" address="0x0" mask="0x00000040" permission="r"
            description="CPLL reference clock is lost if this is 1"
            fw_signal="cpll_status_arr_i(${MGT}).cpllrefclklost"/>
      <node id="PRBS_ERROR_CNT" address="0x1" permission="r"
            description="PRBS error counter"
            fw_signal="prbs_err_cnt_sync_arr(${MGT})"/>
    </node>

  </node>

    </node> <!--End of optical links module -->
